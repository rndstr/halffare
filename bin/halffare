#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'halffare'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/halffare` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/halffare now"
  exit 64
end

include GLI::App

program_desc 'Evaluates whether a SBB Half-Fare travelcard is profitable based on your online order history'

version Halffare::VERSION


desc 'Your username for sbb.ch'
arg_name 'username'
flag [:u,:username]

desc 'Your password for sbb.ch'
arg_name 'password'
flag [:p,:password]

desc 'Fetches your order history from sbb.ch and stores them in a file'
arg_name 'Describe arguments to list here'
command :fetch do |c|
  c.desc 'Filename to store the data in'
  c.default_value 'halffare.dat'
  c.arg_name 'file'
  c.flag :f

  c.action do |global_options,options,args|

    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "fetch command ran"
  end
end

desc 'Evaluates your order history'
arg_name 'Describe arguments to list here'
command :eval do |c|
  c.desc 'Filename to read the data from'
  c.default_value 'halffare.dat'
  c.arg_name 'file'
  c.flag :f

  c.action do |global_options,options,args|

    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "eval command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
